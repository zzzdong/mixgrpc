// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package hello

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GreetingReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingReq) Reset()         { *m = GreetingReq{} }
func (m *GreetingReq) String() string { return proto.CompactTextString(m) }
func (*GreetingReq) ProtoMessage()    {}
func (*GreetingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_4d7605faac84311e, []int{0}
}
func (m *GreetingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingReq.Unmarshal(m, b)
}
func (m *GreetingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingReq.Marshal(b, m, deterministic)
}
func (dst *GreetingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingReq.Merge(dst, src)
}
func (m *GreetingReq) XXX_Size() int {
	return xxx_messageInfo_GreetingReq.Size(m)
}
func (m *GreetingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingReq.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingReq proto.InternalMessageInfo

func (m *GreetingReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetingRsp struct {
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingRsp) Reset()         { *m = GreetingRsp{} }
func (m *GreetingRsp) String() string { return proto.CompactTextString(m) }
func (*GreetingRsp) ProtoMessage()    {}
func (*GreetingRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_4d7605faac84311e, []int{1}
}
func (m *GreetingRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingRsp.Unmarshal(m, b)
}
func (m *GreetingRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingRsp.Marshal(b, m, deterministic)
}
func (dst *GreetingRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingRsp.Merge(dst, src)
}
func (m *GreetingRsp) XXX_Size() int {
	return xxx_messageInfo_GreetingRsp.Size(m)
}
func (m *GreetingRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingRsp proto.InternalMessageInfo

func (m *GreetingRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GreetingReq)(nil), "hello.GreetingReq")
	proto.RegisterType((*GreetingRsp)(nil), "hello.GreetingRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloClient is the client API for Hello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloClient interface {
	Greeting(ctx context.Context, in *GreetingReq, opts ...grpc.CallOption) (*GreetingRsp, error)
}

type helloClient struct {
	cc *grpc.ClientConn
}

func NewHelloClient(cc *grpc.ClientConn) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) Greeting(ctx context.Context, in *GreetingReq, opts ...grpc.CallOption) (*GreetingRsp, error) {
	out := new(GreetingRsp)
	err := c.cc.Invoke(ctx, "/hello.hello/Greeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServer is the server API for Hello service.
type HelloServer interface {
	Greeting(context.Context, *GreetingReq) (*GreetingRsp, error)
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_Greeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).Greeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.hello/Greeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).Greeting(ctx, req.(*GreetingReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greeting",
			Handler:    _Hello_Greeting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_hello_4d7605faac84311e) }

var fileDescriptor_hello_4d7605faac84311e = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x14, 0xb9, 0xb8, 0xdd,
	0x8b, 0x52, 0x53, 0x4b, 0x32, 0xf3, 0xd2, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12,
	0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x75, 0x24, 0x25, 0xc5,
	0x05, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x12, 0x4c, 0x60, 0x55,
	0x30, 0xae, 0x91, 0x35, 0x17, 0xc4, 0x50, 0x21, 0x23, 0x2e, 0x0e, 0x98, 0x0e, 0x21, 0x21, 0x3d,
	0x88, 0xad, 0x48, 0xb6, 0x48, 0x61, 0x88, 0x15, 0x17, 0x24, 0xb1, 0x81, 0x9d, 0x65, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x35, 0x83, 0xa6, 0x61, 0xa5, 0x00, 0x00, 0x00,
}
